{
	"name": "filewatcher",
	"displayName": "File Watcher",
	"description": "Watch file or folder changes (deletions, creations, renaming), and run matched command scripts.",
	"icon": "media/lightning.png",
	"galleryBanner": {
		"color": "#E4F2FF",
		"theme": "light"
	},
	"publisher": "appulate",
	"license": "MIT",
	"version": "1.1.7",
	"repository": {
		"type": "git",
		"url": "https://github.com/appulate/vscode-file-watcher.git"
	},
	"engines": {
		"vscode": "^1.71.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"run script",
		"file watch",
		"folder watch",
		"case insensitive",
		"on change",
		"on save",
		"on delete",
		"on create",
		"on rename"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/extension.js",
	"contributes": {
		"colors": [
			{
				"id": "filewatcher.error",
				"description": "Color for error message in the status bar.",
				"defaults": {
					"dark": "#F5ED39",
					"light": "#F5ED39",
					"highContrast": "#F5ED39"
				}
			},
			{
				"id": "filewatcher.success",
				"description": "Color for success message in the status bar.",
				"defaults": {
					"dark": "#25E028",
					"light": "#25E028",
					"highContrast": "#25E028"
				}
			},
			{
				"id": "filewatcher.run",
				"description": "Color for run message in the status bar.",
				"defaults": {
					"dark": "#00FFFB",
					"light": "#00FFFB",
					"highContrast": "#00FFFB"
				}
			}
		],
		"languages": [
			{
				"id": "file-watcher-output",
				"mimetypes": [
					"text/x-code-output"
				]
			}
		],
		"grammars": [
			{
				"language": "file-watcher-output",
				"scopeName": "file-watcher.output",
				"path": "./syntaxes/file-watcher-output.tmLanguage"
			}
		],
		"commands": [
			{
				"command": "extension.enableFileWatcher",
				"title": "File Watcher: Enable"
			},
			{
				"command": "extension.disableFileWatcher",
				"title": "File Watcher: Disable"
			}
		],
		"configuration": {
			"title": "File Watcher command configuration.",
			"type": "object",
			"properties": {
				"filewatcher.autoClearConsole": {
					"type": "boolean",
					"description": "Automatically clear the console on each save before running commands."
				},
				"filewatcher.shell": {
					"type": "string",
					"description": "Shell to execute the command with (gets passed to child_process.exec as an options arg. e.g. child_process(cmd, { shell })."
				},
				"filewatcher.isClearStatusBar": {
					"type": "boolean",
					"description": "Returns the status bar to its normal position (after receiving a 'Success' or 'Error' status) after a some time."
				},
				"filewatcher.statusBarDelay": {
					"type": "number",
					"description": "The time after which the status returns to normal. Only works if isClearStatusBar === true. Default is 5000ms"
				},
				"filewatcher.isSyncRunEvents": {
					"type": "boolean",
					"description": "Launches event handlers of the same name with the appropriate pattern 'match' or 'notMatch' (e.g. onFileChange and onFolderChange) in synchronous or asynchronous mode."
				},
				"filewatcher.commands": {
					"description": "array of commands",
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"match": {
								"type": "string",
								"description": "Regex for matching files to run commands on \n\nNOTE: This is a regex and not a file path spce, so backslashes have to be escaped. They also have to be escaped in json strings, so you may have to double escape them in certain cases such as targetting contents of folders.\n\ne.g.\n\"match\": \"some\\\\\\\\directory\\\\\\\\.*\"",
								"default": ".*"
							},
							"notMatch": {
								"type": "string",
								"description": "Regex for matching files *not* to run commands on.",
								"default": ".*"
							},
							"cmd": {
								"type": ["string", "object"],
								"description": "Command to execute on save.",
								"default": "echo ${file}",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "The type of command.",
                                        "default": "shell",
                                        "enum": [
                                            "shell",
                                            "vscode"
                                        ]
                                    },
                                    "value": {
                                        "type": "string",
                                        "description": "The command string."
                                    }
                                }
							},
							"isAsync": {
								"type": "boolean",
								"description": "Run command asynchronously."
							},
							"event": {
								"type": "string",
								"description": "events onFileChange, onFolderChange",
								"enum": [
									"onFileChange",
									"onFolderChange",
									"onFileDelete",
									"onFileRename",
									"onFileCreate",
									"onFolderCreate",
									"onFolderDelete"
								]
							}
						}
					}
				},
				"appulateinc.filewatcher": {
					"type": "object",
					"deprecationMessage": "This setting has been deprecated. See: https://github.com/appulate/vscode-file-watcher#samples",
					"description": "appulateinc.filewatcher configuration object",
					"properties": {
						"autoClearConsole": {
							"type": "boolean",
							"description": "Automatically clear the console on each save before running commands.",
							"default": false
						},
						"shell": {
							"type": "string",
							"description": "Shell to execute the command with (gets passed to child_process.exec as an options arg. e.g. child_process(cmd, { shell })."
						},
						"isClearStatusBar": {
							"type": "boolean",
							"description": "Returns the status bar to its normal position (after receiving a 'Success' or 'Error' status) after a some time."
						},
						"statusBarDelay": {
							"type": "number",
							"description": "The time after which the status returns to normal. Only works if isClearStatusBar === true. Default is 5000ms"
						},
						"isSyncRunEvents": {
							"type": "boolean",
							"description": "Launches event handlers of the same name with the appropriate pattern 'match' or 'notMatch' (e.g. onFileChange and onFolderChange) in synchronous or asynchronous mode."
						},
						"commands": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"match": {
										"type": "string",
										"description": "Regex for matching files to run commands on \n\nNOTE: This is a regex and not a file path spce, so backslashes have to be escaped. They also have to be escaped in json strings, so you may have to double escape them in certain cases such as targetting contents of folders.\n\ne.g.\n\"match\": \"some\\\\\\\\directory\\\\\\\\.*\"",
										"default": ".*"
									},
									"notMatch": {
										"type": "string",
										"description": "Regex for matching files *not* to run commands on.",
										"default": ".*"
									},
									"cmd": {
										"type": ["string", "object"],
										"description": "Command to execute on save.",
										"default": "echo ${file}",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "The type of command.",
                                                "default": "shell",
                                                "enum": [
                                                    "shell",
                                                    "vscode"
                                                ]
                                            }
                                        }
									},
									"isAsync": {
										"type": "boolean",
										"description": "Run command asynchronously.",
										"default": false
									},
									"event": {
										"type": "string",
										"description": "events onFileChange, onFolderChange",
										"default": "onFileChange",
										"enum": [
											"onFileChange",
											"onFolderChange",
											"onFileDelete",
											"onFileRename",
											"onFileCreate",
											"onFolderCreate",
											"onFolderDelete"
										]
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch",
		"prepare": "npm install -g vsce",
		"generate": "vsce package",
		"publish": "vsce publish"
	},
	"devDependencies": {
		"@types/node": "^18.7.16",
		"@types/vscode": "^1.71.0",
		"tslint": "^6.1.3",
		"typescript": "^4.8.3"
	}
}
